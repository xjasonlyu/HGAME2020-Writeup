#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os, random
import string, binascii, base64


# from secret import flag
flag = b'hgame{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}'
assert flag.startswith(b'hgame{') and flag.endswith(b'}')

flag_len = len(flag)

print('flag_len:', flag_len)

def xor(s1, s2):
    #assert len(s1)==len(s2)
    return bytes( map( (lambda x: x[0]^x[1]), zip(s1, s2) ) )

random.seed( os.urandom(8) )
keystream = ''.join( [ random.choice(string.ascii_letters+string.digits) for _ in range(flag_len) ] )
keystream = keystream.encode()

#print(keystream)

print( base64.b64encode(xor(flag, keystream)).decode() )

exp = '''BSIkGzIaQQAYF3UbK3koVlN3AyJQSkR/CBARDBgIcScoPwsoG3o+UXYGNw==
BTQmKwtOQXcBMVQWInw7BFdHCg8tZxV3Gx8JUhcxAAs8CQpqQ0c9RiIUNA==
KRUKXwMiG0Y9G0EdFmwUUXVgIiAzYnJBGgcOIyACC11vE3sbfFQZUxscMQ==
ElIoH11LJ34nMmkjd2A9dRxNUT9UXn5xPBYfBx4HB1xrHXIwREJndhAyJw==
OQUKBlwoO1QQP2s7EUM4ZXF6UhUcQhZWDgt8PRQuSRMyL0YJYAUYWilSSQ==
Py0xCi02ClsYNEY7M0UlBkltWB81d1ZLHBMrUEUgUBUxH1tqX2YXXycGJQ==
EhcmDhxJFWsdQ2API0Y3CkVgEiEGS1dwGDcCNycKcRMTHEYqSX03e3oSOA==
OD4IOwwNMQEPHVQKP0gURWx5MjA/X1YTDCtwEzsRZ103B2JqQ3YGYgUSNA==
PSkkKVI/IlAQGUg4FVMDAFQMGQ4ndUwXEiYxLjsJaiMuDkMxY30eXiojOw==
WiIxGCAzImMPIUQaF1sDcUtSAj9WG0kUMEA1Lk0nXDInBGEYWUc4YhRdPg==
ASoSNTMoAmE5PkIoNRh6emIAOQsxfEd1NAcgPR0kehwMJ3opZ0cHByQdCw==
CwkzAQAhRAsYFlU/Ak0oeW1gBBIydXNNByR0IyUZBQdmGUANHUVoQScpKg==
LyoiAyciPkcfJkE4BXF4RlRUF1EySk5nPT8zKREMA1EGM2oRQW8fZwksDQ==
IBYFNCNOG1wsK2teLEp0XVZkDjUjSE9VTkZ9LgAuYQ42XGQqHG9hbnEqMA==
OA0MNVI8HkIEBmgFDGYZY3NkKhUcXlNQHDYEAy8majMpXWM1ZXgedy1WBQ==
WygvGVcpM1lHQWk2CF4kXnFXNywcQFRRDj8iXC9wSi0JAFgvaQEffhFQLw==
HhYlWicCIUMbQ2YLfk8JWHAMIgtUXRIQPysDARIGSwwbMlITHWwAeCAHDg==
ABUHWldOHVVNGl8jJmQ3BkkCAjQLZ2QQByEyECUod1RoMXtpaHMSdRtTPA==
PSYyPxISN3syK0U5DXoHZX4NDygOG1xeM0c3MEURfS0GOkEzfG8Tey8gTw==
JDNYXjErKFk4GmIDK3srdkxFD18MSWlMFTMQLD0hXhQqOX4oSnYJcwdRGg==
XyIlCBUiREoDHGNdL0g+QF14JjQ/aERRPCQRNC8MCjcKDgRqSFg0YXdUMw==
LRYNGiEyA0cQNQcJCXh/exVeLjEnSXxkGj8yCDkQYTQMLl5uS0xjQhtSRQ==
Lw81ODMTFgRBEn1bBXkdeHQAFxMpQWxiPzk/PA9weAdoI38WRH07VXUTTg==
IFA4XQ06E3U/IlMIH2R5BmVWAAYidFVJGh8uNTo5ai5nHUUYYVtmXQwLCw==
XVBRIjFDM3oAFmMDcBknCnACAxc3XVwTNCIjATcvVBNqMgsyWww9RigLLA==
IDcoBzE9RwUwA2EiNlwDe1NTAyYCYktFBDMLARAOX1YoGwIoWGEbXA0PNA==
GCUVJCgWJl4iBV9aMX4rB3NnFTUCR25LOwR8Vj4sRyxmEkMWH2AKcQ9cCg==
ODAiAFY8IlkWJ1ooPXsMXW10LzMdVHBEKTArKCwPf10vJgM3d1E7Zw8ORA==
X1cCJi0DO0UmKnZeP2cYcGpCBF4JaE5cEBl3KSUbSSgHPUo4HF0iBAs9CA==
Mh0LPhUtP2AwNn8ZK2IVA2lXDCAyWXRTRhYqDCMlaVMcDX4JalplexJUBw==
Dx5SAwEdA1EmK0UcEBoKe1ZmFhEdXnFMDgctFTANQx4LDXxubH06eA4RSw==
WT0zJRUvA2s0MHk6HWIUeU5NBxULaG5OCTocUzEECisnOEpoe3lnTi4TMw==
XR5QLxUKEHEzFEMHBlEjd3dmElEsXWhFGgYILx0MVykuAV0vHlonBzQSLg==
Ch43WBcfBWoDN3o9H0o0QkYFOwgMdWluCxMLXT4OAgloMXAteX06dw4cCA==
Bj8qCVArAlIhG1ohNUEUZxB6MF5Rbl9KGwUOKCR7YQwQPAAcfQM0eicTFA==
IQsmJhYfKn1EKgMvBGwgcHBsNAkNQWAfPSt9IAAnQgJsHGcvGGAHV3IBEg==
B18IIDxJF1gEBVYpE30UBmd+DQQWGkQSKyspLDQNVlw5CEQvYmwjWRAPNg==
MlQFJSEpPAE3A0koKlMaVR1sUiETf0xJTBc/LBE6cQI+H0kjZQM/djtdKA==
OzYTChwURAAGMlAFA3kqZ3FXKiEtbExREiQQVCQifw8lDmQSHHwBRRZUBA==
GCNROggIHAAlSkYKLWMrBmJSGBIzYWwUKws8NBMhUCkFU1doWXY0YhcsCg==
WQULBRU+QVwUFQcqIkMufnEAFC8Ual5MJAMiC0wbZy8lHgoMa1whViE/Fg==
LigZPRwfJ2QGBH4vckoeaUt2WCQMTk5eFRgoEjA5fFQvJ3svRm0pAncOPw==
JQsPLFAzGAQBFQYUFnMLfxJ8OyJRSHxKSj19Kkc7azMME0k8ZAYAU3UzMQ==
DRERBTUcPV9MElleFUM/f0dkJzYiSlBuKig3DAwofBMpBmtta1ggATscDw==
Ago2Az01JQZMCXUGf3s1A0hwUx9dFHZfOB4gPU0KXhcrLGIebHw2YzoQMA==
MVVTAitICAUUHFpeA385SW8EVx0AfXRCP0U8CEE2chE3XApoRVdlBDYjPg==
IyEPGlVNHFhEFkM0DBMCWWpBVSUuQ2l/KCgALThwBjcQP3A8S1Y9ci8zCQ==
W18zCyoJB0sUQX1aK0ovWEdFJy5WaRZyKioOEy8uCgkqMwUeZHIZQHsBRA==
WDUrBT00InEzIXQPdUkcaxR9EhcPaVVhLR82NjoIVR4aA0IfSAc2fypXMA==
Dj4YJiYjM0M8MFkMKhkjC0V+BTdca3d/KEAVHScNVwoVWng6fk8Ffho/OQ==
JQkpHlUUQQJEF184Ik1/dEplIAYfFU9QJkc1FBo1dA8VE1oua0JmQjsmEQ==
GR0sOzIKNF48MXM+E0YOW0dDNDMIQ1ERDTR9VhYoYAkwLWIqV2YDZg43GQ==
XCMCXCEwNl1MOVY/Fhl5RW5WDC82WF5uBxx8PkVzWwMbEVsseFcbdxMTTg==
KhIkIhwCHEJHHUgoFE46dkB4DykMflRVSCIpXScrCzVqBWErGAc8VzExHg==
WVQMKFMtR3cMJFQ5EUV4anFPGF8WVX9OSSIJLD41cAAcJWYVd0QfBhcVFA==
DVUNDCIzP3YyIEsNERIBdmcEOAk8YG9gJjMfISETdxMGIAQKZnMKcHodGg==
IV5VCVAVK0ICQ0k3P2YIRxNADVUXXWNsOyIIPT4PUg45P1ggWVwcbBoARA==
OFEmBVZIOnlCMWY+BmEiVlBQBSk2aGwfHDQWHg83QVw9HEEqT1dmfSpQGA==
LQUVDioROFwPEQgJL1MqVXxHB1QIYGFsSR8LFkMIcisVJ1tuG00fVgQkDg==
USUFPxAeFH4BO3ZeA38OVmhCDjQ1f0N0Hyo8PDF2WxUpJnJtam8dYw5TMA==
XBUjDC5IBnIYS3AYE1oDdxJlDwFUWX5LNiInUT12cVNsBFZgfHgjTAoCCA==
IFJQKQ4oN3o9Gn0vEGE4dBNyAx0dalUUMzUQNjYRRQc6U1QMeX4FVxQIMg==
MV4GIgYSAQIAHFcncGwJZVRhByQNfU5NHBMkUTYXdlMLU3wNXXw2cjEODQ==
WAUuFF0zS1QfAn1eFh8de1RMVgBdax9rOCA0JTlzQh4uOgA6HUEATnsDOw==
MTQjABI5KAA8EmgJDkI8en5xNhQMeBBeKwc2AxMvajJrPGkrXWwlQywrLw==
BgsqHzMxQEkBBAEUKWQ4chVSEw83ZU5STyY2LAx2ZgoTXms8fFoyQjE8EA==
LTIYCiEXCmFDFkIiMVwlaU5gFF8Gb1xLPCs1NkwOfV0eG1gBQV5hRA0zNQ==
GBJVKTYJFV0PJgYWdmF5R0F7MQoWW3FSDzp1KgAGBVFpHEoKfH41ATQoDQ==
IjQwVCcyA1oPNwIAFGF5X1NtEwQrGndsM0E/Azl6VwYaDXYgH1xlfwccDQ==
ICgXKD9CMwICPVAeEkIAWWV4ADUyGRRJBCMhMTALWgU4In4xZW0qZTs2GA==
HlULHRdIHwQvGXg8cFojRUsAESMnXW5PCT0qHiICRyNqIQYYbGYnVwUVDQ==
UDMyOjABB1I/PV4vAGMKSUViLwU/T1VDHBgIDxkoVykwP3kNRQRmBikqSA==
DDATOwIBHAMwRXkFfxp7AWIEJiVdfFMRNDMABQcNSw8IDmYsZnASZSYMCw==
Dz8QXSo2NgMgJwQBN2N6AU1XClJSaV52GTgAUzohVBZmBFkra2U7bg1TSA==
IwYEHgswIAc2BHMYH3oYflBlWSRcS2lfSAggCSMbeT4MOUkxSXkjYXpSEQ==
Pi1SO1QxGmAcGlkjKVE/QF5UODISYVV8TQYrKj0XXjEcGkEYTkIaBXo2Hw==
AjUCLwRNHEFCBAAjHUc/XVxcMw9UQUVoSTcuNBcTRlIYDEQuZH4GeAQiKQ==
Oxc7VSk8PQQEK0ddMnorZVdlACk9ZFZSKD9yXTwCQDBtU0kzWgQUTTEwPw==
KwoyBlVOEGIFR0IHAkJ1S0tWClMiR0xHFEsCJwVySxdsUgYxZWE3UBQGOQ==
LyUuWQk9Ol9HKXsdK34EV0cANC9dR3cfCxoJBQACBjQPPAU8VVxicDsqNg==
OwMkAi8UJ3sxIgEvE0IBX2N7CAoLeBNUHBoSDyEzRiMzCnAUFVIyYxUdDA==
ABIPIxMzKlc8SmsaEkcIWWd4NQYvSh9FBzkvLB43RzUxEUUSXXJgQTsDCA==
EgYPFSwdJH8kQWE5HkI8QmBPODAVG2NvCiByPTl0VlAyUwMtalk/WgstEg==
Eh47GAIpP38PBlYsKVl/SUFeACIuZ0QWSRMNVCQbCgknP3BsH0YiRHBWGA==
LhMvKg5OQF1FS1k6IEoufEddBQBVSXRtBxUfDjwOfhUqB3AxFWQ7BiktFw==
BxAFWjE5AQEdPVsvP0wgBmZXFFQHaWp1CEAUJTYyBh0+XVERZXA2Q3EyCg==
CxECHQwsBWETKmM9cH0oWUZgKDVddUdLT0MOKkMTfjE2LEJreF9mBycDKQ==
OCwKOC0iAgo4FQEmNh0KVBdhFygCRkdyHRg/JkArYQcWPVQOdEM1XBIqCA==
Ih1QH1U3NQEwCQA8AGwDdGlcADUWbGhBPxooNxksdgwJD0ote2EYbnQ3CQ==
DhcqPh88GEE5JGEpKloee2UGMyYkG2NKLQECEhYyYg0OCgBhX0cTZBUPCg==
DQsCAQ0oBUYdRUdeE3wKV1JtDBIKRHd0RjoyEDokUFRpEmtpGWI4X3YOMA==
PhVRCFUeBGQ7QkY3LGMCdBBbMAs9XxVsOkcPJwItBgElX3YjTFcbTTMsOA==
Igs3OQs3R1I8J0sWcBs+ZXRjUwMMGVJPCDk0PR4VCw8pDWE8HEY+ZRYrEw==
IR8FVAghGHkTHHorAkAkd0NvFDAvaBYXTyo1VyMqYgcLOkJpb38feBMRGw==
BFdQBSEjG18AH3JdCBwGSXUNGTIEHFFhRh8PFBsVXg8GHgQsekU/ARc9Sw==
OjBSIwJIBEAvRFsMFB4DfmJTKyInfXdQMBk1XDcXBhMHPnwaSHYSVw4xOw==
WwMkPxABK31GGXQiA1p7VEpzNQstan9cCT01Iy8nYTIHJ0drVFk4WHEoRA==
I14wCg4aPX5ACQddInF1YFNZMQ8NfkwVDgMqLTsaWx5mO0Q3ZgUSeTcIOg==
KxBWAB0wKgYjBwIWJXg5QRJMFA8NHm8SEUYtMBc1AF0mEQs0aVIHcyQ1CA==
LgoRIV0+GUEEAUAEf1gscklWCBBcWFZgEBAEARA7Uh0HL0UTGAATAjAJSg==
AjYOJioCBVhFRHAAPWwHQ2l3LCYDZXBADAdyEUItW1w4PH4pHFE4UiIAGg==
'''.strip().split('\n')


TABLE = (string.ascii_letters + string.digits).encode()


def f(j):
    s = None
    for e in exp:
        b = base64.b64decode(e)
        x = b[j]
        i = set([chr(x^i) for i in TABLE if chr(x^i) in string.printable])
        if s:
            s = s&i
        else:
            s = i
    return s

def main():
    for i in range(flag_len):
        print(tuple(f(i))[0], end='')
    print()

main()